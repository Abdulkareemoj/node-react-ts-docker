/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as ProductRouteImport } from './routes/product'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductIndexRouteImport } from './routes/product/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as BlogIndexRouteImport } from './routes/blog/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AuthUnauthorizedRouteImport } from './routes/auth/unauthorized'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'
import { Route as ToolsLinkShortenerIndexRouteImport } from './routes/tools/link-shortener/index'
import { Route as AdminProductsIndexRouteImport } from './routes/admin/products/index'
import { Route as AdminPostsIndexRouteImport } from './routes/admin/posts/index'
import { Route as AdminProductsAddProductRouteImport } from './routes/admin/products/addProduct'
import { Route as AdminPostsAddPostRouteImport } from './routes/admin/posts/addPost'
import { Route as AdminProductsChar91productIdChar93IndexRouteImport } from './routes/admin/products/[productId]/index'
import { Route as AdminPostsChar91postIdChar93IndexRouteImport } from './routes/admin/posts/[postId]/index'

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductRoute = ProductRouteImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductIndexRoute = ProductIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProductRoute,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthUnauthorizedRoute = AuthUnauthorizedRouteImport.update({
  id: '/auth/unauthorized',
  path: '/auth/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const ToolsLinkShortenerIndexRoute = ToolsLinkShortenerIndexRouteImport.update({
  id: '/tools/link-shortener/',
  path: '/tools/link-shortener/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminProductsIndexRoute = AdminProductsIndexRouteImport.update({
  id: '/admin/products/',
  path: '/admin/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminPostsIndexRoute = AdminPostsIndexRouteImport.update({
  id: '/admin/posts/',
  path: '/admin/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminProductsAddProductRoute = AdminProductsAddProductRouteImport.update({
  id: '/admin/products/addProduct',
  path: '/admin/products/addProduct',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminPostsAddPostRoute = AdminPostsAddPostRouteImport.update({
  id: '/admin/posts/addPost',
  path: '/admin/posts/addPost',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminProductsChar91productIdChar93IndexRoute =
  AdminProductsChar91productIdChar93IndexRouteImport.update({
    id: '/admin/products/[productId]/',
    path: '/admin/products/[productId]/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AdminPostsChar91postIdChar93IndexRoute =
  AdminPostsChar91postIdChar93IndexRouteImport.update({
    id: '/admin/posts/[postId]/',
    path: '/admin/posts/[postId]/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/product': typeof ProductRouteWithChildren
  '/terms': typeof TermsRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/unauthorized': typeof AuthUnauthorizedRoute
  '/admin': typeof AdminIndexRoute
  '/blog': typeof BlogIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/product/': typeof ProductIndexRoute
  '/admin/posts/addPost': typeof AdminPostsAddPostRoute
  '/admin/products/addProduct': typeof AdminProductsAddProductRoute
  '/admin/posts': typeof AdminPostsIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/tools/link-shortener': typeof ToolsLinkShortenerIndexRoute
  '/admin/posts/[postId]': typeof AdminPostsChar91postIdChar93IndexRoute
  '/admin/products/[productId]': typeof AdminProductsChar91productIdChar93IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/unauthorized': typeof AuthUnauthorizedRoute
  '/admin': typeof AdminIndexRoute
  '/blog': typeof BlogIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/product': typeof ProductIndexRoute
  '/admin/posts/addPost': typeof AdminPostsAddPostRoute
  '/admin/products/addProduct': typeof AdminProductsAddProductRoute
  '/admin/posts': typeof AdminPostsIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/tools/link-shortener': typeof ToolsLinkShortenerIndexRoute
  '/admin/posts/[postId]': typeof AdminPostsChar91postIdChar93IndexRoute
  '/admin/products/[productId]': typeof AdminProductsChar91productIdChar93IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/privacy': typeof PrivacyRoute
  '/product': typeof ProductRouteWithChildren
  '/terms': typeof TermsRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/unauthorized': typeof AuthUnauthorizedRoute
  '/admin/': typeof AdminIndexRoute
  '/blog/': typeof BlogIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/product/': typeof ProductIndexRoute
  '/admin/posts/addPost': typeof AdminPostsAddPostRoute
  '/admin/products/addProduct': typeof AdminProductsAddProductRoute
  '/admin/posts/': typeof AdminPostsIndexRoute
  '/admin/products/': typeof AdminProductsIndexRoute
  '/tools/link-shortener/': typeof ToolsLinkShortenerIndexRoute
  '/admin/posts/[postId]/': typeof AdminPostsChar91postIdChar93IndexRoute
  '/admin/products/[productId]/': typeof AdminProductsChar91productIdChar93IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/privacy'
    | '/product'
    | '/terms'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/unauthorized'
    | '/admin'
    | '/blog'
    | '/dashboard'
    | '/product/'
    | '/admin/posts/addPost'
    | '/admin/products/addProduct'
    | '/admin/posts'
    | '/admin/products'
    | '/tools/link-shortener'
    | '/admin/posts/[postId]'
    | '/admin/products/[productId]'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/privacy'
    | '/terms'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/unauthorized'
    | '/admin'
    | '/blog'
    | '/dashboard'
    | '/product'
    | '/admin/posts/addPost'
    | '/admin/products/addProduct'
    | '/admin/posts'
    | '/admin/products'
    | '/tools/link-shortener'
    | '/admin/posts/[postId]'
    | '/admin/products/[productId]'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/privacy'
    | '/product'
    | '/terms'
    | '/auth/signin'
    | '/auth/signup'
    | '/auth/unauthorized'
    | '/admin/'
    | '/blog/'
    | '/dashboard/'
    | '/product/'
    | '/admin/posts/addPost'
    | '/admin/products/addProduct'
    | '/admin/posts/'
    | '/admin/products/'
    | '/tools/link-shortener/'
    | '/admin/posts/[postId]/'
    | '/admin/products/[productId]/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  PrivacyRoute: typeof PrivacyRoute
  ProductRoute: typeof ProductRouteWithChildren
  TermsRoute: typeof TermsRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthUnauthorizedRoute: typeof AuthUnauthorizedRoute
  AdminIndexRoute: typeof AdminIndexRoute
  BlogIndexRoute: typeof BlogIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  AdminPostsAddPostRoute: typeof AdminPostsAddPostRoute
  AdminProductsAddProductRoute: typeof AdminProductsAddProductRoute
  AdminPostsIndexRoute: typeof AdminPostsIndexRoute
  AdminProductsIndexRoute: typeof AdminProductsIndexRoute
  ToolsLinkShortenerIndexRoute: typeof ToolsLinkShortenerIndexRoute
  AdminPostsChar91postIdChar93IndexRoute: typeof AdminPostsChar91postIdChar93IndexRoute
  AdminProductsChar91productIdChar93IndexRoute: typeof AdminProductsChar91productIdChar93IndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/': {
      id: '/product/'
      path: '/'
      fullPath: '/product/'
      preLoaderRoute: typeof ProductIndexRouteImport
      parentRoute: typeof ProductRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/unauthorized': {
      id: '/auth/unauthorized'
      path: '/auth/unauthorized'
      fullPath: '/auth/unauthorized'
      preLoaderRoute: typeof AuthUnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tools/link-shortener/': {
      id: '/tools/link-shortener/'
      path: '/tools/link-shortener'
      fullPath: '/tools/link-shortener'
      preLoaderRoute: typeof ToolsLinkShortenerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/products/': {
      id: '/admin/products/'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/posts/': {
      id: '/admin/posts/'
      path: '/admin/posts'
      fullPath: '/admin/posts'
      preLoaderRoute: typeof AdminPostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/products/addProduct': {
      id: '/admin/products/addProduct'
      path: '/admin/products/addProduct'
      fullPath: '/admin/products/addProduct'
      preLoaderRoute: typeof AdminProductsAddProductRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/posts/addPost': {
      id: '/admin/posts/addPost'
      path: '/admin/posts/addPost'
      fullPath: '/admin/posts/addPost'
      preLoaderRoute: typeof AdminPostsAddPostRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/products/[productId]/': {
      id: '/admin/products/[productId]/'
      path: '/admin/products/[productId]'
      fullPath: '/admin/products/[productId]'
      preLoaderRoute: typeof AdminProductsChar91productIdChar93IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/posts/[postId]/': {
      id: '/admin/posts/[postId]/'
      path: '/admin/posts/[postId]'
      fullPath: '/admin/posts/[postId]'
      preLoaderRoute: typeof AdminPostsChar91postIdChar93IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface ProductRouteChildren {
  ProductIndexRoute: typeof ProductIndexRoute
}

const ProductRouteChildren: ProductRouteChildren = {
  ProductIndexRoute: ProductIndexRoute,
}

const ProductRouteWithChildren =
  ProductRoute._addFileChildren(ProductRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  PrivacyRoute: PrivacyRoute,
  ProductRoute: ProductRouteWithChildren,
  TermsRoute: TermsRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthUnauthorizedRoute: AuthUnauthorizedRoute,
  AdminIndexRoute: AdminIndexRoute,
  BlogIndexRoute: BlogIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  AdminPostsAddPostRoute: AdminPostsAddPostRoute,
  AdminProductsAddProductRoute: AdminProductsAddProductRoute,
  AdminPostsIndexRoute: AdminPostsIndexRoute,
  AdminProductsIndexRoute: AdminProductsIndexRoute,
  ToolsLinkShortenerIndexRoute: ToolsLinkShortenerIndexRoute,
  AdminPostsChar91postIdChar93IndexRoute:
    AdminPostsChar91postIdChar93IndexRoute,
  AdminProductsChar91productIdChar93IndexRoute:
    AdminProductsChar91productIdChar93IndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
