/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as SignUpImport } from './routes/SignUp'
import { Route as SignInImport } from './routes/SignIn'
import { Route as ContactImport } from './routes/Contact'
import { Route as AboutImport } from './routes/About'
import { Route as R404Import } from './routes/404'
import { Route as DashboardHomeImport } from './routes/dashboard/Home'
import { Route as BlogIndexImport } from './routes/blog/Index'

// Create/Update Routes

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRoute = SignUpImport.update({
  path: '/SignUp',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  path: '/SignIn',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/Contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/About',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const DashboardHomeRoute = DashboardHomeImport.update({
  path: '/dashboard/Home',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  path: '/blog/Index',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/About': {
      id: '/About'
      path: '/About'
      fullPath: '/About'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/Contact': {
      id: '/Contact'
      path: '/Contact'
      fullPath: '/Contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/SignIn': {
      id: '/SignIn'
      path: '/SignIn'
      fullPath: '/SignIn'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/SignUp': {
      id: '/SignUp'
      path: '/SignUp'
      fullPath: '/SignUp'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/blog/Index': {
      id: '/blog/Index'
      path: '/blog/Index'
      fullPath: '/blog/Index'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/Home': {
      id: '/dashboard/Home'
      path: '/dashboard/Home'
      fullPath: '/dashboard/Home'
      preLoaderRoute: typeof DashboardHomeImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  R404Route,
  AboutRoute,
  ContactRoute,
  SignInRoute,
  SignUpRoute,
  SignInRoute,
  BlogIndexRoute,
  DashboardHomeRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/404",
        "/About",
        "/Contact",
        "/SignIn",
        "/SignUp",
        "/sign-in",
        "/blog/Index",
        "/dashboard/Home"
      ]
    },
    "/404": {
      "filePath": "404.tsx"
    },
    "/About": {
      "filePath": "About.tsx"
    },
    "/Contact": {
      "filePath": "Contact.tsx"
    },
    "/SignIn": {
      "filePath": "SignIn.tsx"
    },
    "/SignUp": {
      "filePath": "SignUp.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/blog/Index": {
      "filePath": "blog/Index.tsx"
    },
    "/dashboard/Home": {
      "filePath": "dashboard/Home.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
