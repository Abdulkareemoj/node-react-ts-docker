/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as SignUpImport } from './routes/SignUp'
import { Route as SignInImport } from './routes/SignIn'
import { Route as R404Import } from './routes/404'
import { Route as IndexImport } from './routes/index'
import { Route as ShortenerIndexImport } from './routes/shortener/index'
import { Route as ProductIndexImport } from './routes/product/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminLinksPageImport } from './routes/admin/linksPage'
import { Route as AdminTablesImport } from './routes/admin/Tables'
import { Route as AdminSettingsImport } from './routes/admin/Settings'
import { Route as AdminProfileImport } from './routes/admin/Profile'
import { Route as AdminChartImport } from './routes/admin/Chart'
import { Route as AdminCalendarImport } from './routes/admin/Calendar'
import { Route as ProductslugIndexImport } from './routes/product/[slug]/index'
import { Route as BlogslugIndexImport } from './routes/blog/[slug]/index'
import { Route as AdminSummaryIndexImport } from './routes/admin/summary/index'
import { Route as AdminUiElementsButtonsImport } from './routes/admin/uiElements/Buttons'
import { Route as AdminUiElementsAlertsImport } from './routes/admin/uiElements/Alerts'
import { Route as AdminFormFormLayoutImport } from './routes/admin/form/FormLayout'
import { Route as AdminFormFormElementsImport } from './routes/admin/form/FormElements'

// Create/Update Routes

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRoute = SignUpImport.update({
  path: '/SignUp',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  path: '/SignIn',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShortenerIndexRoute = ShortenerIndexImport.update({
  path: '/shortener/',
  getParentRoute: () => rootRoute,
} as any)

const ProductIndexRoute = ProductIndexImport.update({
  path: '/product/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const AdminLinksPageRoute = AdminLinksPageImport.update({
  path: '/admin/linksPage',
  getParentRoute: () => rootRoute,
} as any)

const AdminTablesRoute = AdminTablesImport.update({
  path: '/admin/Tables',
  getParentRoute: () => rootRoute,
} as any)

const AdminSettingsRoute = AdminSettingsImport.update({
  path: '/admin/Settings',
  getParentRoute: () => rootRoute,
} as any)

const AdminProfileRoute = AdminProfileImport.update({
  path: '/admin/Profile',
  getParentRoute: () => rootRoute,
} as any)

const AdminChartRoute = AdminChartImport.update({
  path: '/admin/Chart',
  getParentRoute: () => rootRoute,
} as any)

const AdminCalendarRoute = AdminCalendarImport.update({
  path: '/admin/Calendar',
  getParentRoute: () => rootRoute,
} as any)

const ProductslugIndexRoute = ProductslugIndexImport.update({
  path: '/product/[slug]/',
  getParentRoute: () => rootRoute,
} as any)

const BlogslugIndexRoute = BlogslugIndexImport.update({
  path: '/blog/[slug]/',
  getParentRoute: () => rootRoute,
} as any)

const AdminSummaryIndexRoute = AdminSummaryIndexImport.update({
  path: '/admin/summary/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUiElementsButtonsRoute = AdminUiElementsButtonsImport.update({
  path: '/admin/uiElements/Buttons',
  getParentRoute: () => rootRoute,
} as any)

const AdminUiElementsAlertsRoute = AdminUiElementsAlertsImport.update({
  path: '/admin/uiElements/Alerts',
  getParentRoute: () => rootRoute,
} as any)

const AdminFormFormLayoutRoute = AdminFormFormLayoutImport.update({
  path: '/admin/form/FormLayout',
  getParentRoute: () => rootRoute,
} as any)

const AdminFormFormElementsRoute = AdminFormFormElementsImport.update({
  path: '/admin/form/FormElements',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/SignIn': {
      id: '/SignIn'
      path: '/SignIn'
      fullPath: '/SignIn'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/SignUp': {
      id: '/SignUp'
      path: '/SignUp'
      fullPath: '/SignUp'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/admin/Calendar': {
      id: '/admin/Calendar'
      path: '/admin/Calendar'
      fullPath: '/admin/Calendar'
      preLoaderRoute: typeof AdminCalendarImport
      parentRoute: typeof rootRoute
    }
    '/admin/Chart': {
      id: '/admin/Chart'
      path: '/admin/Chart'
      fullPath: '/admin/Chart'
      preLoaderRoute: typeof AdminChartImport
      parentRoute: typeof rootRoute
    }
    '/admin/Profile': {
      id: '/admin/Profile'
      path: '/admin/Profile'
      fullPath: '/admin/Profile'
      preLoaderRoute: typeof AdminProfileImport
      parentRoute: typeof rootRoute
    }
    '/admin/Settings': {
      id: '/admin/Settings'
      path: '/admin/Settings'
      fullPath: '/admin/Settings'
      preLoaderRoute: typeof AdminSettingsImport
      parentRoute: typeof rootRoute
    }
    '/admin/Tables': {
      id: '/admin/Tables'
      path: '/admin/Tables'
      fullPath: '/admin/Tables'
      preLoaderRoute: typeof AdminTablesImport
      parentRoute: typeof rootRoute
    }
    '/admin/linksPage': {
      id: '/admin/linksPage'
      path: '/admin/linksPage'
      fullPath: '/admin/linksPage'
      preLoaderRoute: typeof AdminLinksPageImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/product/': {
      id: '/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductIndexImport
      parentRoute: typeof rootRoute
    }
    '/shortener/': {
      id: '/shortener/'
      path: '/shortener'
      fullPath: '/shortener'
      preLoaderRoute: typeof ShortenerIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/form/FormElements': {
      id: '/admin/form/FormElements'
      path: '/admin/form/FormElements'
      fullPath: '/admin/form/FormElements'
      preLoaderRoute: typeof AdminFormFormElementsImport
      parentRoute: typeof rootRoute
    }
    '/admin/form/FormLayout': {
      id: '/admin/form/FormLayout'
      path: '/admin/form/FormLayout'
      fullPath: '/admin/form/FormLayout'
      preLoaderRoute: typeof AdminFormFormLayoutImport
      parentRoute: typeof rootRoute
    }
    '/admin/uiElements/Alerts': {
      id: '/admin/uiElements/Alerts'
      path: '/admin/uiElements/Alerts'
      fullPath: '/admin/uiElements/Alerts'
      preLoaderRoute: typeof AdminUiElementsAlertsImport
      parentRoute: typeof rootRoute
    }
    '/admin/uiElements/Buttons': {
      id: '/admin/uiElements/Buttons'
      path: '/admin/uiElements/Buttons'
      fullPath: '/admin/uiElements/Buttons'
      preLoaderRoute: typeof AdminUiElementsButtonsImport
      parentRoute: typeof rootRoute
    }
    '/admin/summary/': {
      id: '/admin/summary/'
      path: '/admin/summary'
      fullPath: '/admin/summary'
      preLoaderRoute: typeof AdminSummaryIndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/[slug]/': {
      id: '/blog/[slug]/'
      path: '/blog/[slug]'
      fullPath: '/blog/[slug]'
      preLoaderRoute: typeof BlogslugIndexImport
      parentRoute: typeof rootRoute
    }
    '/product/[slug]/': {
      id: '/product/[slug]/'
      path: '/product/[slug]'
      fullPath: '/product/[slug]'
      preLoaderRoute: typeof ProductslugIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  R404Route,
  SignInRoute,
  SignUpRoute,
  AboutRoute,
  ContactRoute,
  AdminCalendarRoute,
  AdminChartRoute,
  AdminProfileRoute,
  AdminSettingsRoute,
  AdminTablesRoute,
  AdminLinksPageRoute,
  AdminIndexRoute,
  BlogIndexRoute,
  ProductIndexRoute,
  ShortenerIndexRoute,
  AdminFormFormElementsRoute,
  AdminFormFormLayoutRoute,
  AdminUiElementsAlertsRoute,
  AdminUiElementsButtonsRoute,
  AdminSummaryIndexRoute,
  BlogslugIndexRoute,
  ProductslugIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/SignIn",
        "/SignUp",
        "/about",
        "/contact",
        "/admin/Calendar",
        "/admin/Chart",
        "/admin/Profile",
        "/admin/Settings",
        "/admin/Tables",
        "/admin/linksPage",
        "/admin/",
        "/blog/",
        "/product/",
        "/shortener/",
        "/admin/form/FormElements",
        "/admin/form/FormLayout",
        "/admin/uiElements/Alerts",
        "/admin/uiElements/Buttons",
        "/admin/summary/",
        "/blog/[slug]/",
        "/product/[slug]/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/404": {
      "filePath": "404.tsx"
    },
    "/SignIn": {
      "filePath": "SignIn.tsx"
    },
    "/SignUp": {
      "filePath": "SignUp.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/admin/Calendar": {
      "filePath": "admin/Calendar.tsx"
    },
    "/admin/Chart": {
      "filePath": "admin/Chart.tsx"
    },
    "/admin/Profile": {
      "filePath": "admin/Profile.tsx"
    },
    "/admin/Settings": {
      "filePath": "admin/Settings.tsx"
    },
    "/admin/Tables": {
      "filePath": "admin/Tables.tsx"
    },
    "/admin/linksPage": {
      "filePath": "admin/linksPage.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/product/": {
      "filePath": "product/index.tsx"
    },
    "/shortener/": {
      "filePath": "shortener/index.tsx"
    },
    "/admin/form/FormElements": {
      "filePath": "admin/form/FormElements.tsx"
    },
    "/admin/form/FormLayout": {
      "filePath": "admin/form/FormLayout.tsx"
    },
    "/admin/uiElements/Alerts": {
      "filePath": "admin/uiElements/Alerts.tsx"
    },
    "/admin/uiElements/Buttons": {
      "filePath": "admin/uiElements/Buttons.tsx"
    },
    "/admin/summary/": {
      "filePath": "admin/summary/index.tsx"
    },
    "/blog/[slug]/": {
      "filePath": "blog/[slug]/index.tsx"
    },
    "/product/[slug]/": {
      "filePath": "product/[slug]/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
